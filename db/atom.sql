CREATE TABLE IF NOT EXISTS `AtomDB`.`license_verification_table`(
  `LICENSE_ID` INT AUTO_INCREMENT NOT NULL,
  `LICENSE_VERIFICATION_KEY` VARCHAR(2500) NULL,
  `COMPANY_NAME` VARCHAR(500) NOT NULL,
  `START_DATE` DATETIME NULL,
  `END_DATE` DATETIME NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NOT NULL,
  PRIMARY KEY (`LICENSE_ID`)
);


CREATE TABLE IF NOT EXISTS `AtomDB`.`end_user_table`(
  `END_USER_ID` INT AUTO_INCREMENT NOT NULL,
  `COMPANY_NAME` VARCHAR(500) NOT NULL UNIQUE,
  `PO_BOX` VARCHAR(50) NULL,
  `ADDRESS` VARCHAR(2500) NULL,
  `STREET_NAME` VARCHAR(500) NULL,
  `CITY` VARCHAR(500) NULL,
  `COUNTRY` VARCHAR(500) NULL,
  `CONTACT_PERSON` VARCHAR(500) NULL,
  `CONTACT_NUMBER` VARCHAR(500) NULL,
  `EMAIL` VARCHAR(500) NULL,
  `DOMAIN_NAME` VARCHAR(500) NULL,
  `INDUSTRY_TYPE` VARCHAR(500) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `LICENSE_ID` INT,

  PRIMARY KEY (`END_USER_ID`),
  FOREIGN KEY (`LICENSE_ID`) REFERENCES license_verification_table(`LICENSE_ID`)
);




CREATE TABLE IF NOT EXISTS `AtomDB`.`user_roles`(
  `ROLE_ID` INT AUTO_INCREMENT NOT NULL,
  `ROLE` VARCHAR(50) NOT NULL,
  `CONFIGURATION` VARCHAR(5000) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`ROLE_ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`user_table` (
  `ID` INT AUTO_INCREMENT NOT NULL,
  `USER_ID` VARCHAR(50) NOT NULL UNIQUE,
  `EMAIL` VARCHAR(50) NULL,
  `NAME` VARCHAR(200) NOT NULL,
  `ROLE_ID` INT NOT NULL,
  `STATUS` VARCHAR(200) NOT NULL,
  `ACCOUNT_TYPE` VARCHAR(15) NULL,
  `PASSWORD` VARCHAR(512) NOT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `LAST_LOGIN` DATETIME NULL,
  `TEAM` VARCHAR(50) NULL,
  `END_USER_ID` INT NOT NULL,
  `SUPER_USER` VARCHAR(15) NOT NULL DEFAULT 'False',

  PRIMARY KEY (`ID`),
  FOREIGN KEY (`ROLE_ID`) REFERENCES user_roles(`ROLE_ID`),
  FOREIGN KEY (`END_USER_ID`) REFERENCES end_user_table(`END_USER_ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`module_activity_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `USER_ID` VARCHAR(50) NOT NULL,
  `MODULE_FROM` VARCHAR(50) NOT NULL,
  `MODULE_TO` VARCHAR(50) NOT NULL,
  `OBJECT_ID` VARCHAR(50) NOT NULL,
  `OPERATION` VARCHAR(50) NOT NULL,
  `STATUS` VARCHAR(50) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NOT NULL,
  `TIMESTAMP` DATETIME,

  PRIMARY KEY (`ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`login_activity_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `USER_ID` VARCHAR(50) NOT NULL,
  `OPERATION` VARCHAR(50) NOT NULL,
  `STATUS` VARCHAR(50) NOT NULL,
  `DESCRIPTION` VARCHAR(200) NOT NULL,
  `TIMESTAMP` DATETIME,

  PRIMARY KEY (`ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`password_group_table`(
  `PASSWORD_GROUP` VARCHAR(50) NOT NULL,
  `USERNAME` VARCHAR(50) NULL,
  `PASSWORD` VARCHAR(50) NULL,
  `SECRET_PASSWORD` VARCHAR(50) NULL,
  `PASSWORD_GROUP_TYPE` VARCHAR(50) NULL,

  PRIMARY KEY (`PASSWORD_GROUP`)
);


CREATE TABLE IF NOT EXISTS `AtomDB`.`site_table` (
  `SITE_ID` INT AUTO_INCREMENT NOT NULL,
  `SITE_NAME` VARCHAR(50) NOT NULL UNIQUE,
  `REGION_NAME` VARCHAR(50) NULL,
  `LATITUDE` VARCHAR(70) NULL,
  `LONGITUDE` VARCHAR(70) NULL,
  `CITY` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `TOTAL_COUNT` INT NULL,
  PRIMARY KEY (`SITE_ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`rack_table` (
  `RACK_ID` INT AUTO_INCREMENT NOT NULL,
  `RACK_NAME` VARCHAR(50) NOT NULL UNIQUE,
  `SITE_ID` INT NOT NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `MANUFACTURER_DATE` DATE NULL,
  `UNIT_POSITION` VARCHAR(20) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `RU` INT NULL,
  `RFS_DATE` DATE NULL,
  `HEIGHT` INT NULL,
  `WIDTH` INT NULL,
  `DEPTH` INT NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `RACK_MODEL` VARCHAR(50) NULL,
  `FLOOR` VARCHAR(50) NULL,
  `TOTAL_COUNT` INT NULL,

  FOREIGN KEY (`SITE_ID`) REFERENCES site_table(`SITE_ID`),
  PRIMARY KEY (`RACK_ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`atom_table` (
  `ATOM_ID` INT AUTO_INCREMENT NOT NULL,
  `RACK_ID` INT NOT NULL,
  `DEVICE_NAME` VARCHAR(50) NOT NULL UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_RU` VARCHAR(50) NULL,
  `DEPARTMENT` VARCHAR(50) NULL,
  `SECTION` VARCHAR(50) NULL,
  `CRITICALITY` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `DOMAIN` VARCHAR(50) NULL,
  `VIRTUAL` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `PASSWORD_GROUP` VARCHAR(50) NULL,
  `ONBOARD_STATUS` VARCHAR(50) NULL,
  `INSERTED` INT DEFAULT 0,
  `UPDATED` INT DEFAULT 0,
  `EXCEPTION` INT DEFAULT 0,
  `SCOP` VARCHAR(50) DEFAULT 'Atom',

  PRIMARY KEY (`ATOM_ID`),
  FOREIGN KEY (`PASSWORD_GROUP`) REFERENCES password_group_table(`PASSWORD_GROUP`),
  FOREIGN KEY (`RACK_ID`) REFERENCES rack_table(`RACK_ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`auto_discovery_table`(
  `DISCOVERY_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NOT NULL,
  `SUBNET` VARCHAR(50) NULL,
  `OS_TYPE` VARCHAR(500) NOT NULL,
  `MAKE_MODEL` VARCHAR(500) NOT NULL,
  `FUNCTION` VARCHAR(500) NOT NULL,
  `VENDOR` VARCHAR(500) NOT NULL,
  `SNMP_STATUS` VARCHAR(50) NOT NULL,
  `SNMP_VERSION` VARCHAR(50) NOT NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NOT NULL,
  PRIMARY KEY(`DISCOVERY_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`auto_discovery_network_table`(
  `NETWORK_ID` INT AUTO_INCREMENT NOT NULL,
  `NETWORK_NAME` VARCHAR(50) NOT NULL UNIQUE,
  `SUBNET` VARCHAR(50) NOT NULL UNIQUE,
  `NO_OF_DEVICES` INT NULL,
  `SCAN_STATUS` VARCHAR(50) NULL,
  `EXCLUDED_IP_RANGE` VARCHAR(200) NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NOT NULL,
  
  PRIMARY KEY(`NETWORK_ID`)
);