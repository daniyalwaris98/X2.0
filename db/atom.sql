CREATE TABLE IF NOT EXISTS `AtomDB`.`password_group_table`(
  `PASSWORD_GROUP` VARCHAR(50) NOT NULL,
  `USERNAME` VARCHAR(50) NOT NULL,
  `PASSWORD` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`PASSWORD_GROUP`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`rack_table` (
  `RACK_ID` INT AUTO_INCREMENT NOT NULL,
  `RACK_NAME` VARCHAR(50) NOT NULL UNIQUE,
  `SITE_NAME` VARCHAR(50) NOT NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `MANUFACTURER_DATE` DATE NULL,
  `UNIT_POSITION` VARCHAR(20) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `RU` INT NULL,
  `RFS_DATE` DATE NULL,
  `HEIGHT` INT NULL,
  `WIDTH` INT NULL,
  `DEPTH` INT NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `RACK_MODEL` VARCHAR(50) NULL,
  `FLOOR` VARCHAR(50) NULL,
  `TOTAL_COUNT` INT NULL,
  PRIMARY KEY (`RACK_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`phy_table` (
  `SITE_ID` INT AUTO_INCREMENT NOT NULL,
  `SITE_NAME` VARCHAR(50) NOT NULL UNIQUE,
  `REGION` VARCHAR(50) NULL,
  `LATITUDE` VARCHAR(70) NULL,
  `LONGITUDE` VARCHAR(70) NULL,
  `CITY` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `TOTAL_COUNT` INT NULL,
  PRIMARY KEY (`SITE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`atom_table` (
  `ATOM_ID` INT AUTO_INCREMENT NOT NULL,
  `SITE_NAME` VARCHAR(50) NOT NULL,
  `RACK_NAME` VARCHAR(50) NOT NULL,
  `DEVICE_NAME` VARCHAR(50) NOT NULL UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_RU` VARCHAR(50) NULL,
  `DEPARTMENT` VARCHAR(50) NULL,
  `SECTION` VARCHAR(50) NULL,
  `CRITICALITY` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `DOMAIN` VARCHAR(50) NULL,
  `VIRTUAL` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `PASSWORD_GROUP` VARCHAR(50) NULL,
  `ONBOARD_STATUS` VARCHAR(50) NULL,
  `INSERTED` INT DEFAULT 0,
  `UPDATED` INT DEFAULT 0,
  `EXCEPTION` INT DEFAULT 0,
  PRIMARY KEY (`ATOM_ID`),
  FOREIGN KEY (`PASSWORD_GROUP`) REFERENCES password_group_table(`PASSWORD_GROUP`),
  FOREIGN KEY (`RACK_NAME`) REFERENCES rack_table(`RACK_NAME`),
  FOREIGN KEY (`SITE_NAME`) REFERENCES phy_table(`SITE_NAME`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`device_table` (
  `DEVICE_NAME` VARCHAR(150) NOT NULL,
  `SITE_NAME` VARCHAR(50) NOT NULL,
  `RACK_NAME` VARCHAR(50) NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `SOFTWARE_TYPE` VARCHAR(50) NULL,
  `SOFTWARE_VERSION` VARCHAR(50) NULL,
  `PATCH_VERSION` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `RU` INT NULL,
  `DEPARTMENT` VARCHAR(50) NULL,
  `SECTION` VARCHAR(50) NULL,
  `CRITICALITY` VARCHAR(20) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `DOMAIN` VARCHAR(50) NULL,
  `MANUFACTURER` VARCHAR(50) NULL,
  `HW_EOS_DATE` DATE NULL,
  `HW_EOL_DATE` DATE NULL,
  `SW_EOS_DATE` DATE NULL,
  `SW_EOL_DATE` DATE NULL,
  `VIRTUAL` VARCHAR(20) NULL,
  `RFS_DATE` DATE NULL,
  `AUTHENTICATION` VARCHAR(10) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `SUBRACK_ID_NUMBER` VARCHAR(50) NULL,
  `MANUFACTURER_DATE` DATE NULL,
  `HARDWARE_VERSION` VARCHAR(50) NULL,
  `MAX_POWER` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  `SOURCE` VARCHAR(50) NULL,
  `STACK` VARCHAR(50) NULL,
  `CONTRACT_NUMBER` VARCHAR(50) NULL,
  `CONTRACT_EXPIRY` DATE NULL,
  `UPTIME` DATE NULL,
  PRIMARY KEY (`DEVICE_NAME`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`board_table` (
  `BOARD_ID` INT AUTO_INCREMENT NOT NULL,
  `BOARD_NAME` VARCHAR(250) NOT NULL,
  `DEVICE_NAME` VARCHAR(150) NOT NULL,
  `DEVICE_SLOT_ID` VARCHAR(250) NULL,
  `SOFTWARE_VERSION` VARCHAR(50) NULL,
  `HARDWARE_VERSION` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `MANUFACTURER_DATE` DATE NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `EOS_DATE` DATE NULL,
  `EOL_DATE` DATE NULL,
  `RFS_DATE` DATE NULL,
  `PN_CODE` VARCHAR(50) NULL,
  PRIMARY KEY (`BOARD_ID`)
);

-- FOREIGN KEY (`DEVICE_NAME`) REFERENCES device_table(`DEVICE_NAME`));
CREATE TABLE IF NOT EXISTS `AtomDB`.`subboard_table` (
  `SUBBOARD_ID` INT AUTO_INCREMENT NOT NULL,
  `SUBBOARD_NAME` VARCHAR(250) NOT NULL,
  `DEVICE_NAME` VARCHAR(150) NOT NULL,
  `SUBBOARD_TYPE` VARCHAR(150) NULL,
  `SUBRACK_ID` VARCHAR(250) NULL,
  `SLOT_NUMBER` VARCHAR(250) NULL,
  `SUBSLOT_NUMBER` VARCHAR(250) NULL,
  `SOFTWARE_VERSION` VARCHAR(50) NULL,
  `HARDWARE_VERSION` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `EOS_DATE` DATE NULL,
  `EOL_DATE` DATE NULL,
  `RFS_DATE` DATE NULL,
  `PN_CODE` VARCHAR(50) NULL,
  PRIMARY KEY (`SUBBOARD_ID`)
);

-- FOREIGN KEY (`DEVICE_NAME`) REFERENCES device_table(`DEVICE_NAME`));
CREATE TABLE IF NOT EXISTS `AtomDB`.`sfp_table` (
  `SFP_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_NAME` VARCHAR(150) NOT NULL,
  `MEDIA_TYPE` VARCHAR(50) NULL,
  `PORT_NAME` VARCHAR(250) NULL,
  `PORT_TYPE` VARCHAR(50) NULL,
  `CONNECTOR` VARCHAR(50) NULL,
  `MODE` VARCHAR(50) NULL,
  `SPEED` VARCHAR(50) NULL,
  `WAVELENGTH` VARCHAR(50) NULL,
  `MANUFACTURER` VARCHAR(250) NULL,
  `OPTICAL_DIRECTION_TYPE` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `EOS_DATE` DATE NULL,
  `EOL_DATE` DATE NULL,
  `RFS_DATE` DATE NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  PRIMARY KEY (`SFP_ID`)
);

-- FOREIGN KEY (`DEVICE_NAME`) REFERENCES device_table(`DEVICE_NAME`));
CREATE TABLE IF NOT EXISTS `AtomDB`.`license_table` (
  `LICENSE_NAME` VARCHAR(250) NOT NULL UNIQUE,
  `LICENSE_DESCRIPTION` VARCHAR(250) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `RFS_DATE` DATE NULL,
  `ACTIVATION_DATE` DATE NULL,
  `EXPIRY_DATE` DATE NULL,
  `GRACE_PERIOD` VARCHAR(10) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `CAPACITY` VARCHAR(50) NULL,
  `USAGE` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  PRIMARY KEY (`LICENSE_NAME`)
);

-- FOREIGN KEY (`DEVICE_NAME`) REFERENCES device_table(`DEVICE_NAME`));
CREATE TABLE IF NOT EXISTS `AtomDB`.`ipam_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `REGION` VARCHAR(50) NULL,
  `SITE_NAME` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `SUBNET_MASK` VARCHAR(50) NULL,
  `SUBNET` VARCHAR(50) NULL,
  `PROTOCOL_STATUS` VARCHAR(50) NULL,
  `ADMIN_STATUS` VARCHAR(50) NULL,
  `VLAN` VARCHAR(50) NULL,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `VLAN_NAME` VARCHAR(50) NULL,
  `VIRTUAL_IP` VARCHAR(50) NULL,
  `DESCRIPTION` VARCHAR(1000) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `MANAGEMENT_IP` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`dc_capacity` (
  `DC_CAPACITY_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_IP` VARCHAR(50) NOT NULL,
  `SITE_NAME` VARCHAR(50) NOT NULL,
  `DEVICE_NAME` VARCHAR(50) NOT NULL,
  `OS_VERSION` VARCHAR(50) NULL,
  `TOTAL_1G_PORTS` INT NULL,
  `TOTAL_10G_PORTS` INT NULL,
  `TOTAL_25G_PORTS` INT NULL,
  `TOTAL_40G_PORTS` INT NULL,
  `TOTAL_100G_PORTS` INT NULL,
  `TOTAL_FAST_ETHERNET_PORTS` INT NULL,
  `CONNECTED_1G` INT NULL,
  `CONNECTED_10G` INT NULL,
  `CONNECTED_25G` INT NULL,
  `CONNECTED_40G` INT NULL,
  `CONNECTED_100G` INT NULL,
  `CONNECTED_FAST_ETHERNET` INT NULL,
  `NOT_CONNECTED_1G` INT NULL,
  `NOT_CONNECTED_10G` INT NULL,
  `NOT_CONNECTED_25G` INT NULL,
  `NOT_CONNECTED_40G` INT NULL,
  `NOT_CONNECTED_100G` INT NULL,
  `NOT_CONNECTED_FAST_ETHERNET` INT NULL,
  `UNUSED_SFPS_1G` INT NULL,
  `UNUSED_SFPS_10G` INT NULL,
  `UNUSED_SFPS_25G` INT NULL,
  `UNUSED_SFPS_40G` INT NULL,
  `UNUSED_SFPS_100G` INT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`DC_CAPACITY_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`sntc_table` (
  `SNTC_ID` INT AUTO_INCREMENT NOT NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `HW_EOS_DATE` DATE NULL,
  `HW_EOL_DATE` DATE NULL,
  `SW_EOS_DATE` DATE NULL,
  `SW_EOL_DATE` DATE NULL,
  `RFS_DATE` DATE NULL,
  `MANUFACTURER_DATE` DATE NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`SNTC_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`user_table` (
  `ID` INT AUTO_INCREMENT NOT NULL,
  `USER_ID` VARCHAR(50) NOT NULL UNIQUE,
  `EMAIL` VARCHAR(50) NULL,
  `NAME` VARCHAR(200) NOT NULL,
  `ROLE` VARCHAR(200) NOT NULL,
  `STATUS` VARCHAR(200) NOT NULL,
  `ACCOUNT_TYPE` VARCHAR(15) NULL,
  `PASSWORD` VARCHAR(512) NOT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `LAST_LOGIN` DATETIME NULL,
  `TEAM` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `COMPANY_NAME` VARCHAR(500) NULL,
  PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`admin_table`(
  `USER_ID` INT AUTO_INCREMENT NOT NULL,
  `EMAIL` VARCHAR(50) NULL,
  `NAME` VARCHAR(50) NOT NULL,
  `PASSWORD` VARCHAR(50) NOT NULL,
  `ROLE` VARCHAR(50) NOT NULL,
  `ACTIVE` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`USER_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`failed_devices_table`(
  `FAILURE_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NOT NULL,
  `DEVICE_TYPE` VARCHAR(50) NOT NULL,
  `DATE` DATETIME NULL,
  `FAILURE_REASON` VARCHAR(2000) NULL,
  `MODULE` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`FAILURE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`admin_roles`(
  `ROLE_ID` INT AUTO_INCREMENT NOT NULL,
  `ROLE` VARCHAR(50) NOT NULL,
  `CONFIGURATION` VARCHAR(5000) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`ROLE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`ipam_devices_table`(
  `IPAM_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_TYPE` VARCHAR(50) NOT NULL,
  `PASSWORD_GROUP` VARCHAR(50) NULL,
  `SOURCE` VARCHAR(50) NOT NULL,
  `DEVICE_NAME` VARCHAR(50) NOT NULL UNIQUE,
  PRIMARY KEY (`IPAM_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`ipam_devices_fetch_table`(
  `IPAM_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `INTERFACE` VARCHAR(50) NULL,
  `INTERFACE_IP` VARCHAR(50) NULL,
  `SUBNET` VARCHAR(50) NULL,
  `SUBNET_MASK` VARCHAR(50) NULL,
  `INTERFACE_DESCRIPTION` VARCHAR(1000) NULL,
  `VIRTUAL_IP` VARCHAR(50) NULL,
  `VLAN` VARCHAR(50) NULL,
  `VLAN_NUMBER` VARCHAR(50) NULL,
  `INTERFACE_STATUS` VARCHAR(50) NULL,
  `SIZE` VARCHAR(50) NULL,
  `FETCH_DATE` DATETIME NULL,
  `DISCOVERED` VARCHAR(50) NULL,
  `SUBNET_NAME` VARCHAR(50) NULL,
  PRIMARY KEY (`IPAM_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`subnet_data_table`(
  `SUBNET_ID` INT AUTO_INCREMENT NOT NULL,
  `SUBNET` VARCHAR(50) NOT NULL,
  `SUBNET_MASK` VARCHAR(50) NOT NULL,
  `SUBNET_NAME` VARCHAR(50) NULL,
  `LOCATION` VARCHAR(50) NULL,
  PRIMARY KEY (`SUBNET_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`subnet_display_table`(
  `SUBNET_ID` INT AUTO_INCREMENT NOT NULL,
  `SUBNET_ADDRESS` VARCHAR(50) NOT NULL,
  `SUBNET_NAME` VARCHAR(50) NULL,
  `SUBNET_MASK` VARCHAR(50) NULL,
  `SIZE` VARCHAR(50) NULL,
  `USAGE` VARCHAR(50) NULL,
  `LOCATION` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `DISCOVER_FROM` VARCHAR(50) NULL,
  `SCAN_DATE` DATETIME NULL,
  PRIMARY KEY (`SUBNET_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`ip_table`(
  `IP_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `SUBNET` VARCHAR(50) NULL,
  `MAC_ADDRESS` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `ASSET_TAG` VARCHAR(50) NULL,
  `CONFIGURATION_SWITCH` VARCHAR(50) NULL,
  `CONFIGURATION_INTERFACE` VARCHAR(50) NULL,
  `OPEN_PORTS` VARCHAR(50) NULL,
  `IP_TO_DNS` VARCHAR(50) NULL,
  `DNS_TO_IP` VARCHAR(50) NULL,
  `STATUS_HISTORY` VARCHAR(50) NULL,
  `LAST_USED` DATETIME NULL,
  `VIP` VARCHAR(500) NULL,
  PRIMARY KEY (`IP_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`ip_history_table`(
  `IP_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `MAC_ADDRESS` VARCHAR(50) NULL,
  `ASSET_TAG` VARCHAR(50) NULL,
  `DATE` DATETIME NOT NULL,
  PRIMARY KEY (`IP_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`ip_details_history_table`(
  `IP_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  PRIMARY KEY (`IP_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`add_dns_table`(
  `DNS_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `USERNAME` VARCHAR(50) NOT NULL,
  `SERVER_NAME` VARCHAR(50) NULL,
  `PASSWORD` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`DNS_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`dns_servers`(
  `DNS_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `SERVER_NAME` VARCHAR(50) NULL,
  `TYPE` VARCHAR(50) NULL,
  `NUMBER_OF_ZONES` INT NULL,
  PRIMARY KEY (`DNS_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`dns_zones`(
  `DNS_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `ZONE_NAME` VARCHAR(50) NULL,
  `ZONE_STATUS` VARCHAR(50) NULL,
  `ZONE_TYPE` VARCHAR(50) NULL,
  `LOOKUP_TYPE` VARCHAR(50) NULL,
  `SERVER_NAME` VARCHAR(50) NULL,
  `SERVER_TYPE` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  PRIMARY KEY (`DNS_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`dns_servers_record`(
  `DNS_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `NAME` VARCHAR(200) NULL,
  `TYPE` VARCHAR(50) NULL,
  `ZONE_NAME` VARCHAR(50) NULL,
  `DATA` VARCHAR(200) NULL,
  `SERVER_NAME` VARCHAR(50) NULL,
  PRIMARY KEY (`DNS_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`inventory_scripts_status` (
  `ID` INT AUTO_INCREMENT NOT NULL,
  `SCRIPT` VARCHAR(50) UNIQUE NOT NULL,
  `STATUS` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`ID`)
);

INSERT INTO
  `inventory_scripts_status` (`script`, `status`)
values
  ("IPAM", "Completed");

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_credentials_table`(
  `CREDENTIALS_ID` INT AUTO_INCREMENT NOT NULL,
  `CATEGORY` VARCHAR(100) NULL,
  `CREDENTIALS` VARCHAR(100) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `PROFILE_NAME` VARCHAR(250) NOT NULL UNIQUE,
  `DESCRIPTION` VARCHAR(250) NULL,
  `SNMP_READ_COMMUNITY` VARCHAR(50) NULL,
  `SNMP_PORT` VARCHAR(50) NULL,
  `USERNAME` VARCHAR(100) NULL,
  `PASSWORD` VARCHAR(100) NULL,
  `ENCRYPTION_PASSWORD` VARCHAR(100) NULL,
  `AUTHENTICATION_METHOD` VARCHAR(50) NULL,
  `ENCRYPTION_METHOD` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  PRIMARY KEY (`CREDENTIALS_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_devices_table` (
  `MONITORING_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(40) NULL,
  `CREDENTIALS` VARCHAR(50) NULL,
  `SOURCE` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `ACTIVE` VARCHAR(50) NULL,
  `STATUS` VARCHAR(40) NULL,
  `ACTIVE_ID` VARCHAR(80) NULL,
  `DATE` DATETIME NULL,
  `DEVICE_HEATMAP` VARCHAR(40) NULL,
  PRIMARY KEY (`MONITORING_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_network_devices_table`(
  `DEVICE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `INTERFACES` VARCHAR(50) NULL,
  `DISCOVERED_TIME` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `DEVICE_DESCRIPTION` VARCHAR(2000) NULL,
  `CPU` VARCHAR(50) NULL,
  `MEMORY` VARCHAR(50) NULL,
  `PACKETS_LOSS` VARCHAR(50) NULL,
  `RESPONSE_TIME` VARCHAR(50) NULL,
  PRIMARY KEY (`DEVICE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_network_interfaces_table`(
  `INTERFACE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `UPLOAD_SPEED` VARCHAR(50) NULL,
  `DOWNLOAD_SPEED` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `INTERFACE_STATUS` VARCHAR(50) NULL,
  `INTERFACE DESCRIPTION` VARCHAR(2000) NULL,
  PRIMARY KEY (`INTERFACE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_routers_devices_table`(
  `DEVICE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `INTERFACES` VARCHAR(50) NULL,
  `DISCOVERED_TIME` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `DEVICE_DESCRIPTION` VARCHAR(2000) NULL,
  `CPU` VARCHAR(50) NULL,
  `MEMORY` VARCHAR(50) NULL,
  `PACKETS_LOSS` VARCHAR(50) NULL,
  `RESPONSE_TIME` VARCHAR(50) NULL,
  PRIMARY KEY (`DEVICE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_routers_interfaces_table`(
  `INTERFACE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `UPLOAD_SPEED` VARCHAR(50) NULL,
  `DOWNLOAD_SPEED` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `INTERFACE_STATUS` VARCHAR(50) NULL,
  `INTERFACE DESCRIPTION` VARCHAR(2000) NULL,
  PRIMARY KEY (`INTERFACE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_switches_devices_table`(
  `DEVICE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `INTERFACES` VARCHAR(50) NULL,
  `DISCOVERED_TIME` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `DEVICE_DESCRIPTION` VARCHAR(2000) NULL,
  `CPU` VARCHAR(50) NULL,
  `MEMORY` VARCHAR(50) NULL,
  `PACKETS_LOSS` VARCHAR(50) NULL,
  `RESPONSE_TIME` VARCHAR(50) NULL,
  PRIMARY KEY (`DEVICE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_switches_interfaces_table`(
  `INTERFACE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `UPLOAD_SPEED` VARCHAR(50) NULL,
  `DOWNLOAD_SPEED` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `INTERFACE_STATUS` VARCHAR(50) NULL,
  `INTERFACE DESCRIPTION` VARCHAR(2000) NULL,
  PRIMARY KEY (`INTERFACE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_firewalls_devices_table`(
  `DEVICE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `INTERFACES` VARCHAR(50) NULL,
  `DISCOVERED_TIME` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `DEVICE_DESCRIPTION` VARCHAR(2000) NULL,
  `CPU` VARCHAR(50) NULL,
  `MEMORY` VARCHAR(50) NULL,
  `PACKETS_LOSS` VARCHAR(50) NULL,
  `RESPONSE_TIME` VARCHAR(50) NULL,
  PRIMARY KEY (`DEVICE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_firewalls_interfaces_table`(
  `INTERFACE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `UPLOAD_SPEED` VARCHAR(50) NULL,
  `DOWNLOAD_SPEED` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `INTERFACE_STATUS` VARCHAR(50) NULL,
  `INTERFACE DESCRIPTION` VARCHAR(2000) NULL,
  PRIMARY KEY (`INTERFACE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_wireless_devices_table`(
  `DEVICE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `INTERFACES` VARCHAR(50) NULL,
  `DISCOVERED_TIME` VARCHAR(50) NULL,
  `TOTAL_JOINED_APS` VARCHAR(50) NULL,
  `TOTAL_CLIENTS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `DEVICE_DESCRIPTION` VARCHAR(2000) NULL,
  `CPU` VARCHAR(50) NULL,
  `MEMORY` VARCHAR(50) NULL,
  `PACKETS_LOSS` VARCHAR(50) NULL,
  `RESPONSE_TIME` VARCHAR(50) NULL,
  PRIMARY KEY (`DEVICE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_wireless_interfaces_table`(
  `INTERFACE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `UPLOAD_SPEED` VARCHAR(50) NULL,
  `DOWNLOAD_SPEED` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `INTERFACE_STATUS` VARCHAR(50) NULL,
  `INTERFACE DESCRIPTION` VARCHAR(2000) NULL,
  PRIMARY KEY (`INTERFACE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_servers_devices_table`(
  `SERVER_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `INTERFACES` VARCHAR(50) NULL,
  `DISCOVERED_TIME` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `DEVICE_DESCRIPTION` VARCHAR(2000) NULL,
  `CPU` VARCHAR(50) NULL,
  `MEMORY` VARCHAR(50) NULL,
  `PACKETS_LOSS` VARCHAR(50) NULL,
  `RESPONSE_TIME` VARCHAR(50) NULL,
  PRIMARY KEY (`SERVER_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_servers_interfaces_table`(
  `INTERFACE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `UPLOAD_SPEED` VARCHAR(50) NULL,
  `DOWNLOAD_SPEED` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `INTERFACE_STATUS` VARCHAR(50) NULL,
  `INTERFACE DESCRIPTION` VARCHAR(2000) NULL,
  PRIMARY KEY (`INTERFACE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_windows_devices_table`(
  `SERVER_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `INTERFACES` VARCHAR(50) NULL,
  `DISCOVERED_TIME` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `DEVICE_DESCRIPTION` VARCHAR(2000) NULL,
  `CPU` VARCHAR(50) NULL,
  `MEMORY` VARCHAR(50) NULL,
  `PACKETS_LOSS` VARCHAR(50) NULL,
  `RESPONSE_TIME` VARCHAR(50) NULL,
  PRIMARY KEY (`SERVER_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_windows_interfaces_table`(
  `INTERFACE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `UPLOAD_SPEED` VARCHAR(50) NULL,
  `DOWNLOAD_SPEED` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `INTERFACE_STATUS` VARCHAR(50) NULL,
  `INTERFACE DESCRIPTION` VARCHAR(2000) NULL,
  PRIMARY KEY (`INTERFACE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_linux_devices_table`(
  `SERVER_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `INTERFACES` VARCHAR(50) NULL,
  `DISCOVERED_TIME` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `DEVICE_DESCRIPTION` VARCHAR(2000) NULL,
  `CPU` VARCHAR(50) NULL,
  `MEMORY` VARCHAR(50) NULL,
  `PACKETS_LOSS` VARCHAR(50) NULL,
  `RESPONSE_TIME` VARCHAR(50) NULL,
  PRIMARY KEY (`SERVER_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`monitoring_linux_interfaces_table`(
  `INTERFACE_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `UPLOAD_SPEED` VARCHAR(50) NULL,
  `DOWNLOAD_SPEED` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  `INTERFACE_STATUS` VARCHAR(50) NULL,
  `INTERFACE DESCRIPTION` VARCHAR(2000) NULL,
  PRIMARY KEY (`INTERFACE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`alerts_table`(
  `ALERT_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DESCRIPTION` VARCHAR(200) NULL,
  `ALERT_TYPE` VARCHAR(50) NULL,
  `CATEGORY` VARCHAR(50) NULL,
  `ALERT_STATUS` VARCHAR(50) NULL,
  `MAIL_STATUS` VARCHAR(50) NULL,
  `START_DATE` DATETIME NULL,
  `DATE` DATETIME NULL,
  `FUNCTION` VARCHAR(50) NULL,
  PRIMARY KEY (`ALERT_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`alerts_history_table`(
  `ALERT_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DESCRIPTION` VARCHAR(200) NULL,
  `ALERT_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `MAIL_STATUS` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  PRIMARY KEY (`ALERT_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`aps_table`(
  `AP_ID` INT AUTO_INCREMENT NOT NULL UNIQUE,
  `CONTROLLER_NAME` VARCHAR(50) NOT NULL,
  `AP_IP` VARCHAR(50) NOT NULL,
  `AP_NAME` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `AP_MODEL` VARCHAR(50) NULL,
  `HARDWARE_VERSION` VARCHAR(50) NULL,
  `SOFTWARE_VERSION` VARCHAR(50) NULL,
  `DESCRIPTION` VARCHAR(200) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`AP_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`f5` (
  `F5_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NOT NULL,
  `DEVICE_NAME` VARCHAR(50) NOT NULL,
  `VSERVER_NAME` VARCHAR(500) NULL,
  `VIP` VARCHAR(50) NULL,
  `POOL_NAME` VARCHAR(500) NULL,
  `POOL_MEMBER` VARCHAR(500) NULL,
  `NODE` VARCHAR(500) NULL,
  `SERVICE_PORT` VARCHAR(500) NULL,
  `MONITOR_VALUE` VARCHAR(500) NULL,
  `MONITOR_STATUS` VARCHAR(500) NULL,
  `LB_METHOD` VARCHAR(500) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`F5_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`firewall_vip` (
  `FIREWALL_VIP_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NOT NULL,
  `DEVICE_NAME` VARCHAR(50) NOT NULL,
  `INTERNAL_IP` VARCHAR(500) NULL,
  `VIP` VARCHAR(50) NULL,
  `SPORT` VARCHAR(500) NULL,
  `DPORT` VARCHAR(500) NULL,
  `EXTINTF` VARCHAR(500) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`FIREWALL_VIP_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`ncm_table`(
  `NCM_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_NAME` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_TYPE` VARCHAR(50) NOT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `PASSWORD_GROUP` VARCHAR(50) NOT NULL,
  `SOURCE` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `CONFIG_CHANGE_DATE` DATETIME NULL,
  PRIMARY KEY (`NCM_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`ncm_history_table`(
  `NCM_ID` INT AUTO_INCREMENT NOT NULL,
  `FILE_NAME` VARCHAR(50) NULL,
  `CONFIGURATION_DATE` DATETIME NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_TYPE` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  PRIMARY KEY (`NCM_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`ncm_configuration_status_table`(
  `NCM_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `SUCCESS` INT NOT NULL,
  `FAILURE` INT NOT NULL,
  `CREATION_DATE` DATETIME NULL,
  PRIMARY KEY (`NCM_ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`ncm_alarm_table`(
  `NCM_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(50) NULL,
  `ALARM_CATEGORY` VARCHAR(50) NULL,
  `ALARM_TITLE` VARCHAR(200) NULL,
  `ALARM_DESCRIPTION` VARCHAR(500) NULL,
  `ALARM_STATUS` VARCHAR(50) DEFAULT 'Open',
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `RESOLVE_REMARKS` VARCHAR(200) NULL,
  `ALARM_MAIL_STATUS` VARCHAR(50) DEFAULT 'No',
  `ALARM_MAIL_DATE` DATETIME NULL,
  `RESOLVE_MAIL_STATUS` VARCHAR(50) DEFAULT 'No',
  `RESOLVE_MAIL_DATE` DATETIME NULL,
  PRIMARY KEY (`NCM_ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`end_user_table`(
  `END_USER_ID` INT AUTO_INCREMENT NOT NULL,
  `COMPANY_NAME` VARCHAR(500) NOT NULL UNIQUE,
  `PO_BOX` VARCHAR(50) NULL,
  `ADDRESS` VARCHAR(2500) NULL,
  `STREET_NAME` VARCHAR(500) NULL,
  `CITY` VARCHAR(500) NULL,
  `COUNTRY` VARCHAR(500) NULL,
  `CONTACT_PERSON` VARCHAR(500) NULL,
  `CONTACT_NUMBER` VARCHAR(500) NULL,
  `EMAIL` VARCHAR(500) NULL,
  `DOMAIN_NAME` VARCHAR(500) NULL,
  `INDUSTRY_TYPE` VARCHAR(500) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `LICENSE_STATUS` VARCHAR(50) NULL,
  PRIMARY KEY (`END_USER_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`dc_capacity_devices_table`(
  `DCCM_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_TYPE` VARCHAR(50) NOT NULL,
  `PASSWORD_GROUP` VARCHAR(50) NULL,
  `SOURCE` VARCHAR(50) NOT NULL,
  `DEVICE_NAME` VARCHAR(50) NOT NULL UNIQUE,
  PRIMARY KEY (`DCCM_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`aws_credentials_table`(
  `ACCESS_KEY` VARCHAR(150) NOT NULL UNIQUE,
  `SECRETE_ACCESS_KEY` VARCHAR(150) NOT NULL UNIQUE,
  `ACCOUNT_LABEL` VARCHAR (100) NULL,
  PRIMARY KEY (`ACCESS_KEY`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`license_verification_table`(
  `LICENSE_ID` INT AUTO_INCREMENT NOT NULL,
  `COMPANY_NAME` VARCHAR(500) NOT NULL,
  `GENERATED_LICENSE_KEY` VARCHAR(2500) NULL,
  `LICENSE_TENURE_IN_MONTHS` INT NULL,
  `VERIFICATION_LICENSE_KEY` VARCHAR(2500) NULL,
  `START_DATE` DATETIME NULL,
  `END_DATE` DATETIME NULL,
  PRIMARY KEY (`LICENSE_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`auto_discovery_table`(
  `DISCOVERY_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(50) NOT NULL,
  `SUBNET` VARCHAR(50) NULL,
  `OS_TYPE` VARCHAR(500) NOT NULL,
  `MAKE_MODEL` VARCHAR(500) NOT NULL,
  `FUNCTION` VARCHAR(500) NOT NULL,
  `VENDOR` VARCHAR(500) NOT NULL,
  `SNMP_STATUS` VARCHAR(50) NOT NULL,
  `SNMP_VERSION` VARCHAR(50) NOT NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NOT NULL,
  `SSH_STATUS` VARCHAR(50) NULL,
  PRIMARY KEY(`DISCOVERY_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`auto_discovery_network_table`(
  `NETWORK_ID` INT AUTO_INCREMENT NOT NULL,
  `NETWORK_NAME` VARCHAR(50) NOT NULL UNIQUE,
  `SUBNET` VARCHAR(50) NOT NULL UNIQUE,
  `NO_OF_DEVICES` INT NULL,
  `SCAN_STATUS` VARCHAR(50) NULL,
  `EXCLUDED_IP_RANGE` VARCHAR(200) NULL,
  `CREATION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NOT NULL,
  
  PRIMARY KEY(`NETWORK_ID`)
);


CREATE TABLE IF NOT EXISTS `AtomDB`.`snmp_credentials_table`(
  `CREDENTIALS_ID` INT AUTO_INCREMENT NOT NULL,
  `CATEGORY` VARCHAR(100) NULL,
  `CREDENTIALS` VARCHAR(100) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `PROFILE_NAME` VARCHAR(250) NOT NULL UNIQUE,
  `DESCRIPTION` VARCHAR(250) NULL,
  `SNMP_READ_COMMUNITY` VARCHAR(50) NULL,
  `SNMP_PORT` VARCHAR(50) NULL,
  `USERNAME` VARCHAR(100) NULL,
  `PASSWORD` VARCHAR(100) NULL,
  `ENCRYPTION_PASSWORD` VARCHAR(100) NULL,
  `AUTHENTICATION_METHOD` VARCHAR(50) NULL,
  `ENCRYPTION_METHOD` VARCHAR(50) NULL,
  `DATE` DATETIME NULL,
  PRIMARY KEY (`CREDENTIALS_ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`aws_ec2_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `INSTANCE_ID` VARCHAR(100) NOT NULL UNIQUE,
  `INSTANCE_NAME` VARCHAR(100) NOT NULL,
  `REGION_ID` VARCHAR(100) NOT NULL,
  `ACCESS_KEY` VARCHAR(150) NOT NULL,
  `MONITORING_STATUS` VARCHAR(150) DEFAULT 'Disabled',
  PRIMARY KEY (`ID`),
  FOREIGN KEY (`ACCESS_KEY`) REFERENCES aws_credentials_table(`ACCESS_KEY`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`aws_s3_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `BUCKET_NAME` VARCHAR(100) NOT NULL UNIQUE,
  `REGION_ID` VARCHAR(100) NOT NULL,
  `ACCESS_KEY` VARCHAR(150) NOT NULL,
  `MONITORING_STATUS` VARCHAR(150) DEFAULT 'Disabled',
  PRIMARY KEY (`ID`),
  FOREIGN KEY (`ACCESS_KEY`) REFERENCES aws_credentials_table(`ACCESS_KEY`)
);


CREATE TABLE IF NOT EXISTS `AtomDB`.`aws_elb_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `LB_NAME` VARCHAR(100) NOT NULL,
  `LB_TYPE` VARCHAR(100) NOT NULL,
  `LB_SCHEME` VARCHAR(100) NOT NULL,
  `LB_ARN` VARCHAR(300) NOT NULL,
  `REGION_ID` VARCHAR(100) NOT NULL,
  `ACCESS_KEY` VARCHAR(150) NOT NULL,
  `MONITORING_STATUS` VARCHAR(150) DEFAULT 'Disabled',
  PRIMARY KEY (`ID`),
  FOREIGN KEY (`ACCESS_KEY`) REFERENCES aws_credentials_table(`ACCESS_KEY`)
);


CREATE TABLE IF NOT EXISTS `AtomDB`.`aws_rds_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `RDS_NAME` VARCHAR(100) NOT NULL,
  `RDS_CLASS` VARCHAR(100) NOT NULL,
  `RDS_ENGINE` VARCHAR(100) NOT NULL,
  `RDS_STATUS` VARCHAR(300) NOT NULL,
  `REGION_ID` VARCHAR(100) NOT NULL,
  `ACCESS_KEY` VARCHAR(150) NOT NULL,
  `MONITORING_STATUS` VARCHAR(150) DEFAULT 'Disabled',
  PRIMARY KEY (`ID`),
  FOREIGN KEY (`ACCESS_KEY`) REFERENCES aws_credentials_table(`ACCESS_KEY`)
);


CREATE TABLE IF NOT EXISTS `AtomDB`.`aws_alerts_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `SERVICE_NAME` VARCHAR(100) NOT NULL,
  `SERVICE_KEY` VARCHAR(100) NOT NULL,
  `ACCOUNT_LABEL` VARCHAR(100) NOT NULL,
  `LEVEL` VARCHAR(100) NOT NULL,
  `TYPE` VARCHAR(100) NOT NULL,
  `DESCRIPTION` VARCHAR(300) NOT NULL,
  `STATUS` VARCHAR(100) NOT NULL DEFAULT 'Open',
  `CREATETION_DATE` DATETIME NOT NULL,
  `MODIFICATION_DATE` DATETIME NOT NULL,
  PRIMARY KEY (`ID`)
);





CREATE TABLE IF NOT EXISTS `AtomDB`.`mail_credentials`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `MAIL` VARCHAR(100) NOT NULL,
  `PASSWORD` VARCHAR(100) NOT NULL,
  `SERVER` VARCHAR(100) NOT NULL,
  `STATUS` VARCHAR(100) NOT NULL DEFAULT 'Active',
  `DESCRIPTION` VARCHAR(100) NULL,
  PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS `AtomDB`.`alert_recipents_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `MAIL` VARCHAR(100) NOT NULL,
  `CATEGORY` VARCHAR(100) NOT NULL,
  `STATUS` VARCHAR(100) NOT NULL DEFAULT 'Active',
  PRIMARY KEY (`ID`)
);



CREATE TABLE IF NOT EXISTS `AtomDB`.`alert_cpu_threshold_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(100) NOT NULL,
  `LOW_THRESHOLD` INT NOT NULL,
  `MEDIUM_THRESHOLD` INT NOT NULL,
  `CRITICAL_THRESHOLD` INT NOT NULL,
  `PAUSE_MIN` INT NOT NULL,
  PRIMARY KEY (`ID`)
);

INSERT INTO `AtomDB`.`alert_cpu_threshold_table` (`IP_ADDRESS`,`LOW_THRESHOLD`, `MEDIUM_THRESHOLD`, `CRITICAL_THRESHOLD`, `PAUSE_MIN`) VALUES ('All',50,70,90,30);


CREATE TABLE IF NOT EXISTS `AtomDB`.`alert_memory_threshold_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS` VARCHAR(100) NOT NULL,
  `LOW_THRESHOLD` INT NOT NULL,
  `MEDIUM_THRESHOLD` INT NOT NULL,
  `CRITICAL_THRESHOLD` INT NOT NULL,
  `PAUSE_MIN` INT NOT NULL,
  PRIMARY KEY (`ID`)
);

INSERT INTO `AtomDB`.`alert_memory_threshold_table` (`IP_ADDRESS`,`LOW_THRESHOLD`, `MEDIUM_THRESHOLD`, `CRITICAL_THRESHOLD`, `PAUSE_MIN`) VALUES ('All',50,70,90,30);


CREATE TABLE IF NOT EXISTS `AtomDB`.`fcm_token_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `TOKEN` VARCHAR(300) NOT NULL,
  `STATUS` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`ID`)
);